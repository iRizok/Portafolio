
public class Individuo {

	private int cepa[]; // Es una cadena string del algoritmo covid
	private double fitness = -1; // La calidad de la adaptacion del individuo

	public Individuo(int cepa[]) {
		this.cepa = cepa;
	}

	/**
	 * Crear un individuo con un cromosoma aleatorio de tamaño determinado
	 * 
	 * @param tamañoCepa
	 */

	// lo genera aleatorio
	String alphaBinario
	char[] alphaCepaBinario = alphaBinario.toCharArray();

	String alphaBinario2 = "0 1 0 0 1 1 0 1 0 1 0 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 1";
	String[] alphaCepaBinario2 = alphaBinario2.split(" ");

	/*
	 * public Individuo(int tamanoCepa) { this.cepa = new int[tamanoCepa]; for (int
	 * gen = 0; gen < tamanoCepa; gen++) { for (int i = 0; i <
	 * alphaCepaBinario.length; i++) { if (alphaCepaBinario[i] == '1') { setGen(gen,
	 * 1); } else { setGen(gen, 0); } } } }
	 */

	/*
	 * public Individuo(int tamanoCepa) { this.cepa = new int[tamanoCepa]; for (int
	 * gen = 0; gen < tamanoCepa; gen++) { for (int i = 0; i <
	 * alphaCepaBinario2.length; i++) { if (alphaCepaBinario2[i].equals("1")) {
	 * setGen(gen, 1); } else { setGen(gen, 0); } } } }
	 */

	// es el que jala.

	public Individuo(int tamanoCepa) {
		this.cepa = new int[tamanoCepa];
		for (int gen = 0; gen < tamanoCepa; gen++) {
			if (0.5 < Math.random()) {
				setGen(gen, 1);
			} else {
				setGen(gen, 0);
			}

		}
	}

	public void setGen(int posicion, int gen) {
		cepa[posicion] = gen;
	}

	public int getGen(int posicion) {
		return cepa[posicion];
	}

	public int[] getCepa() {
		return cepa;
	}

	public int getTamanoCepa() {
		return cepa.length;
	}

	public double getFitness() {
		return fitness;
	}

	public void setFitness(double fitness) {
		this.fitness = fitness;
	}

	public String cepaString() {
		String strCepa = "";
		for (int gen = 0; gen < cepa.length; gen++) {
			strCepa += cepa[gen];
		}
		return strCepa;
	}

	public static String textToBinary(String originalText) {

		String binaryText = "";
		for (int i = 0; i < originalText.length(); i++) {
			// Primero obtenemos la letra o carácter actual
			char currentChar = originalText.charAt(i);
			// Necesitamos obtener su representación entera ASCII
			int ascii = (int) currentChar;
			// Una vez que ya tenemos el entero, lo convertimos a binario
			String binary = decimalToBinary(ascii);
			// Lo agregamos a la cadena resultante agregando además un espacio
			binaryText += binary + "*";

		}
		// Finalmente regresamos el texto
		return binaryText;
	}

	public static int binaryToDecimal(String binary) {
		// A este número le vamos a sumar cada valor binario
		int decimal = 0;
		int position = 0;
		// Recorrer la cadena...
		for (int x = binary.length() - 1; x >= 0; x--) {
			// Saber si es 1 o 0; primero asumimos que es 1 y abajo comprobamos
			short digit = 1;
			if (binary.charAt(x) == '0') {
				digit = 0;
			}

			/*
			 * Se multiplica el dígito por 2 elevado a la potencia según la posición;
			 * comenzando en 0, luego 1 y así sucesivamente
			 */
			double multiplier = Math.pow(2, position);
			decimal += digit * multiplier;
			position++;
		}
		return decimal;
	}

	public static String decimalToBinary(int decimal) {
		if (decimal <= 0) {
			return "0";
		}
		String binary = "";
		while (decimal > 0) {
			short remainder = (short) (decimal % 2);
			decimal = decimal / 2;
			// Insertar el dígito al inicio de la cadena
			binary = String.valueOf(remainder) + binary;
		}
		return binary;
	}

	public static String binaryToText(String binaryText) {
		// Necesitamos separar cada número binario por espacio. Usamos split
		String[] binaryNumbers = binaryText.split(" ");
		String text = "";

		// Los recorremos. En cada paso tenemos al número binario
		for (String currentBinary : binaryNumbers) {
			// Ahora convertimos ese binario a decimal
			int decimal = binaryToDecimal(currentBinary);
			// Obtenemos la letra que le corresponde a ese valor ASCII
			char letra = (char) decimal;
			text += letra;
		}
		return text;
	}

}
